{"version":3,"sources":["assets/me.jpg","assets/Resume2020.pdf","components/Nav.js","components/Home.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","to","Home","src","me","alt","href","target","resume","Contact","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,gC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,+KCwB5BC,MArBf,WACE,OACE,6BACE,yBAAKC,UAAU,uBACb,4BAAQA,UAAU,sBAChB,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAGF,4BAAQD,UAAU,qBAChB,kBAAC,IAAD,CAAMC,GAAG,YAAT,YAGF,4BAAQD,UAAU,qBAChB,kBAAC,IAAD,CAAMC,GAAG,cAAT,eAGJ,+B,yCCsBSC,MArCf,WACE,OACE,6BACE,yBAAKF,UAAU,WACb,yBAAKA,UAAU,gBACf,uBAAGA,UAAU,UAAb,MAEE,6BACA,6BAHF,QAIM,6BACJ,8BAEF,yBAAKA,UAAU,gBATjB,QAYA,yBAAKA,UAAU,oCACb,yBAAKG,IAAKC,IAAIC,IAAI,YAClB,6BACA,uBAAGC,KAAK,4BAA4BC,OAAO,SAA3C,UAGA,6BACA,uBAAGD,KAAME,IAAQD,OAAO,SAAxB,UAGA,6BACA,uBACED,KAAK,sCACLC,OAAO,SAFT,eCROE,MApBf,WACE,OACE,6BACE,yBAAKT,UAAU,oDAAf,WACA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,gBAEf,yBAAKA,UAAU,sCAAf,uBACsB,6BADtB,iCAMA,yBAAKA,UAAU,mBCMRU,MAbf,WACE,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWX,IACjC,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,WAAWC,UAAWJ,OCF5BK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8fb1c259.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.8d4afd9a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Resume2020.25180206.pdf\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n  return (\r\n    <div>\r\n      <div className=\"buttons is-centered\">\r\n        <button className=\" button is-success\">\r\n          <Link to=\"/\">Home</Link>\r\n        </button>\r\n\r\n        <button className=\"button is-success\">\r\n          <Link to=\"/contact\">Contact</Link>\r\n        </button>\r\n\r\n        <button className=\"button is-success\">\r\n          <Link to=\"/portfolio\">Portfolio</Link>\r\n        </button>\r\n      </div>\r\n      <br />\r\n    </div>\r\n  );\r\n  }\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport me from \"../assets/me.jpg\";\r\nimport resume from \"../assets/Resume2020.pdf\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <div className=\"columns\">\r\n        <div className=\"column is-1\"></div>\r\n        <p className=\"column\">\r\n          abc\r\n          <br />\r\n          <br />\r\n         abcd <br />\r\n          <br />\r\n        </p>\r\n        <div className=\"column is-1\"></div>Ã¥\r\n      </div>\r\n\r\n      <div className=\"column is-full has-text-centered\">\r\n        <img src={me} alt=\"Yubaraj\"></img>\r\n        <br></br>\r\n        <a href=\"https://github.com/yubraj\" target=\"blank\">\r\n          Github\r\n        </a>\r\n        <br />\r\n        <a href={resume} target=\"blank\">\r\n          Resume\r\n        </a>\r\n        <br />\r\n        <a\r\n          href=\"https://www.linkedin.com/in/yubraj/\"\r\n          target=\"blank\"\r\n        >\r\n          LinkedIn\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction Contact() {\r\n  return (\r\n    <div>\r\n      <div className=\"has-text-centered has-text-weight-bold is-size-1\">Contact</div>\r\n      <div className=\"columns\">\r\n        <div className=\"column is-1\"></div>\r\n        \r\n        <div className=\"column has-text-centered is-size-4\">\r\n          Phone: 9779849670280<br />\r\n          Email: sagardahal34@gmail.com\r\n\r\n        </div>\r\n\r\n        <div className=\"column is-1\"></div>\r\n      </div>\r\n    </div>\r\n      \r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Nav from \"./components/Nav\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Contact from \"./components/Contact\";\r\n// import Portfolio from \"./components/Portfolio\";\r\n\r\nfunction App() { \r\n  return (\r\n    <BrowserRouter>\r\n      <div>\r\n        <Nav />\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/Contact\" component={Contact} />\r\n        {/* <Route exact path=\"/Portfolio\" component={Portfolio} /> */}\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}